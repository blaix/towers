module Main exposing (main)

import Playground exposing (..)
import Array2d


type Tile
    = Path
    | Null


tileSize =
    80

board =
    [ [ Null, Null, Null, Null, Null, Null, Null, Null ]
    , [ Null, Path, Path, Path, Path, Null, Null, Null ]
    , [ Null, Path, Null, Null, Path, Null, Path, Path ]
    , [ Path, Path, Null, Path, Path, Null, Path, Null ]
    , [ Null, Null, Null, Path, Null, Null, Path, Null ]
    , [ Null, Null, Null, Path, Path, Path, Path, Null ]
    , [ Null, Null, Null, Null, Null, Null, Null, Null ]
    ]


boardWidth =
    board
        |> Array.get 0
        |> Maybe.withDefault []
        |> Array.length
        |> (*) tileSize
        |> toFloat


boardHeight =
    board
        |> Array.length
        |> (*) tileSize
        |> toFloat


main =
    game view update {}


view computer _ =
    board
        |> Array2d.indexedMap drawTile
        |> Array.flatten
        |> group
        |> adjustCenter
        |> Array.singleton


drawTile : { x : Int, y : Int } -> Tile -> Shape
drawTile { x, y } tile =
    let
        color =
            case tile of
                Path ->
                    brown

                Null ->
                    green
    in
    square color tileSize
        |> moveRight ((x |> toFloat) * tileSize)
        |> moveDown ((y |> toFloat) * tileSize)


adjustCenter : Shape -> Shape
adjustCenter boardGroup =
    boardGroup
        |> moveLeft (boardWidth / 2)
        |> moveUp (boardHeight / 2 - 40) -- not sure why the 40 adjustment is needed?


update computer {} =
    {}
